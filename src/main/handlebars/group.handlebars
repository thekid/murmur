{{#> layout}}
  {{#*inline "title"}}{{group.full_name}} feed{{/inline}}
  {{#*inline "content"}}

    <!-- Group -->
    <div class="ui vertical segment user-info" style="border-bottom: 0">
      <div style="display: grid; grid-template-columns: 80px auto">
        <img class="ui circular image" src="{{sub group.mugshot_url_template width='76' height='76'}}" width="76" height="76">
        <div style="padding: 0 2.4em 0 2em">
          <h2 class="ui header" style="margin-bottom: 0.2em">
            {{group.full_name}}
            <a href="https://web.yammer.com/main/groups/{{identifier}}"><i class="external link square alternate icon"></i></a>
          </h2>
          <p>
            {{group.description}}</a><br>
            <span style="color: rgba(0,0,0,.4)">
              Created {{date group.created_at 'd.m.Y'}}
            </span>
          </p>
        </div>
      </div>
      <div class="ui statistics" style="margin-top: 0">
        <div class="violet statistic">
          <div class="value">{{group.stats.members}}</div>
          <div class="label">Members</div>
        </div>
        <div class="violet statistic">
          <div class="value">{{activity.group.month.messagesCreated.actionsCount}}</div>
          <div class="label" title="Number of created messages in past 28 days">Activity</div>
        </div>
        <div class="violet statistic">
          <div class="value">{{activity.group.month.totalActiveUsers}}</div>
          <div class="label" title="Unique users interacting in past 28 days">Interactions</div>
        </div>
      </div>
    </div>
    <div class="ui vertical clearing segment">
      <button class="ui right floated tiny labeled icon button" type="submit" onclick="update()"><i class="refresh icon"></i> Refresh</button>
      <p>
        <i class="clock icon"></i> <span id="timing">...</span>
      </p>
    </div>

    <!-- Live events -->
    <div id="live"></div>

    <!-- Feed -->
    <div class="ui vertical segment" id="content">
      <div class="ui stackable cards" id="feed">
        <div class="card">
          <div class="content">
            <div class="ui placeholder">
              <div class="header"><div class="medium line"></div></div>
              <div class="meta"><div class="short line"></div></div>
            </div>
            <div class="ui placeholder">
              <div class="description"><div class="line"></div></div>
            </div>
          </div>
          <div class="extra content">
            <div class="center aligned author">
              <div class="ui placeholder">
                <div class="avatar image"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  {{/inline}}
  {{#*inline "script"}}
    <script type="text/javascript">
      function update() {
        const $content = document.getElementById('content');
        const $feed = document.getElementById('feed');
        const $timing = document.getElementById('timing');

        const start = new Date().getTime();
        const template = Handlebars.compile(`{{{source 'templates/messages'}}}`);

        const feed = function(result, error) {
          if (result !== null) {
            const edges = result.group.feed.threads.edges;
            edges.sort((a, b) => ((a.node.updatedAt === b.node.updatedAt) ? 0 : ((a.node.updatedAt > b.node.updatedAt) ? -1 : 1)));
            $feed.innerHTML = template({edges: edges, errors: []});
          } else {
            $feed.innerHTML = template({edges: [], errors: [error.name + ': ' + error.message]});
          }

          $content.classList.remove('loading');
          $timing.innerHTML = ((new Date().getTime() - start) / 1000) + ' seconds';
          $('.excerpt').popup();
        }


        $content.classList.add('loading');
        fetch('/api/grouped/all/{{group.id}}?limit=20', {method: 'GET', credentials: 'same-origin'})
          .then(res => res.ok ? res.json() : (function() { throw new Error(res.status + ': ' + res.statusText); })())
          .then(result => feed(result, null))
          .catch(error => feed(null, error))
        ;

        // Fetch these in parallel
        events();
      };

      function events() {
        const live = function(group, error) {
          const $live = document.getElementById('live');
          const template = Handlebars.compile(`{{{source 'templates/events'}}}`);

          if (error !== null) {
            console.log('Ignoring', error);
          } else {
            const html = template({
              edges  : group.currentEvents.edges.concat(group.futureEvents.edges).concat(group.pastEvents.edges),
              errors : []
            });

            // Do not repaint if event has not changed
            if (html !== $live.innerHTML) $live.innerHTML = html;
          }
          setTimeout(events, 10 * 1000);
        }
        fetch('/api/events/group/{{group.id}}?start=1+week+ago', {method: 'GET', credentials: 'same-origin'})
          .then(res => res.ok ? res.json() : (function() { throw new Error(res.status + ': ' + res.statusText); })())
          .then(result => live(result.group, null))
          .catch(error => live(null, error))
        ;
      }

      window.onload = update;
    </script>
  {{/inline}}
{{/layout}}