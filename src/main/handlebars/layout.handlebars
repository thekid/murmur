<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="msapplication-config" content="none"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>{{> title}} - Murmur</title>
    <link href="//cdn.jsdelivr.net/npm/fomantic-ui@2.8.7/dist/semantic.min.css" rel="stylesheet" type="text/css">
  </head>
  <body class="pushable">
    <nav class="ui top fixed inverted menu">
      <a class="active violet item" href="/">Murmur</a>
    </nav>

    <main class="pusher" style="padding: 50px 10px 0 10px">
      {{> content}}
    </main>

    <script src="//cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/fomantic-ui@2.8.7/dist/semantic.min.js"></script>
    <script type="text/javascript">
      class Html {
        constructor(source) {
          this.source = source;
        }

        toString() {
          return this.source;
        }
      }

      const format = {
        placeholders : new RegExp(/\{\{([^}]+)\}\}/g),

        html: function(content) {
          const entities = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;'};
          if (typeof(content) === 'string') {
            return content.replace(/[&<>"']/g, s => entities[s]);
          } else {
            return '' + content;
          }
        },

        label: function(content) {
          if ('question' === content) {
            return new Html('<a class="ui olive right corner label"><i class="compass icon"></i></a>');
          } else if ('announcement' === content) {
            return new Html('<a class="ui orange right corner label"><i class="rss icon"></i></a>');
          }
          return '';
        },

        likes: function(content) {
          if (content > 0) {
            return new Html('<i class="heart outline like icon"></i> ' + content);
          }
          return '';
        },

        date: function(content) {
          return content.replace(/ \+[0-9]+$/, '');
        },

        first: function(content) {
          const p = content.match(/[^,]\n\n/);
          const s = content.match(/[^0-9][.?!]( |\n|$)/);
          let pos = 0;

          if (null === p && null === s) {
            pos = content.length;
          } else if (null === p || s.index < p.index) {
            pos = s.index + 2;
          } else {
            pos = p.index + 1;
          }

          if (pos > 100) {
            return content.substring(0, 100) + 'â€¦';
          } else {
            return content.substring(0, pos);
          }
        }
      };
    </script>
    {{> script}} 
  </body>
</html>