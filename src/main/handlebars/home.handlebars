{{#> layout}}
  {{#*inline "title"}}Home{{/inline}}
  {{#*inline "content"}}
    <h1>Murmur <small style="color: rgba(0,0,0,.4)">Yammer Feeds reimagined</small></h1>

    <!-- User information -->
    <div class="ui vertical segment user-info" style="margin-bottom: 2em">
      <div style="display: grid; grid-template-columns: 80px auto">
        <img class="ui circular image" src="{{sub user.mugshot_url_template 'width=76&height=76'}}" width="76" height="76">
        <div style="padding: 0 2.4em 0 2em">
          <h2 class="ui header" style="margin-bottom: 0.2em">{{user.full_name}}</h2>
          <p>
            <a href="{{user.email}}">{{user.email}}</a>, {{user.department}}, {{user.location}}<br>
            <span style="color: rgba(0,0,0,.4)">
              On <strong>{{user.network_name}}</strong> Yammer since {{date user.activated_at 'd.m.Y'}}
            </span>
          </p>
        </div>
      </div>
      <div class="ui statistics" style="margin-top: 0">
        <div class="violet statistic">
          <div class="value">{{user.stats.following}}</div>
          <div class="label">Following</div>
        </div>
        <div class="violet statistic">
          <div class="value">{{user.stats.followers}}</div>
          <div class="label">Followers</div>
        </div>
        <div class="violet statistic">
          <div class="value">{{size groups}}</div>
          <div class="label">Groups</div>
        </div>
      </div>
    </div>

    <!-- Live events -->
    <div id="live"></div>

    <!-- List variants -->
    <div class="ui four raised stackable cards">
      <div class="card">
        <div class="content">
          <div class="header"><a href="/feed/all">All</a></div>
          <div class="meta">Feed</div>
          <div class="description">Corresponds to “All” conversations in the Yammer web interface.</div>
        </div>
        <div class="extra content"><i class="clock icon"></i> 1 - 2 seconds</div>
      </div>

      <div class="card">
        <div class="content">
          <div class="header"><a href="/feed/discovery">Discovery</a></div>
          <div class="meta">Feed</div>
          <div class="description">Discovery feed.</div>
        </div>
        <div class="extra content"><i class="clock icon"></i> 1 - 2 seconds</div>
      </div>

      <div class="card">
        <div class="content">
          <div class="header"><a href="/feed/following">Following</a></div>
          <div class="meta">Feed</div>
          <div class="description">Shows news from groups and people you're following on Yammer</div>
        </div>
        <div class="extra content"><i class="clock icon"></i> 1 - 2 seconds</div>
      </div>

      <div class="card">
        <a class="ui orange right corner label"><i class="tasks icon"></i></a>
        <div class="content">
          <div class="header"><a href="/grouped/all">Grouped</a></div>
          <div class="meta">Feed</div>
          <div class="description">Shows merged feed from selected groups</div>
        </div>
        <div class="extra content"><i class="clock icon"></i> ~1 second</div>
      </div>

      <div class="card">
        <a class="ui blue right corner label"><i class="compass icon"></i></a>
        <div class="content">
          <div class="header"><a href="/grouped/questions">Questions</a></div>
          <div class="meta">Feed</div>
          <div class="description">Shows merged questions from selected groups</div>
        </div>
        <div class="extra content"><i class="clock icon"></i> ~1 second</div>
      </div>
    </div>
  {{/inline}}
  {{#*inline "script"}}
    <script type="text/javascript">
      function update() {
        const completed = function(result, error) {
          const $live = document.getElementById('live');
          const template = Handlebars.compile(`{{{source 'templates/events'}}}`);

          if (error !== null) {
            console.log('Ignoring', error);
          } else {
            $live.innerHTML = template({edges: result.activeBroadcasts.edges, errors: []});
          }
          setTimeout(update, 10 * 1000);
        }

        fetch('/api/events', {method: 'GET', credentials: 'same-origin'})
          .then(res => res.ok ? res.json() : (function() { throw new Error(res.status + ': ' + res.statusText); })())
          .then(result => completed(result, null))
          .catch(error => completed(null, error))
        ;
      };

      window.onload = update;
    </script>
  {{/inline}}
{{/layout}}